// https://github.com/jtroo/kanata/blob/a9dabfcb07e22c9efa0bc15349780b10afacb6cd/parser/src/keys/mod.rs as guide

class Mappings {
  static const Map<String, String> keyMappings = {
    '◄': 'Arrow Left',
    '←': 'Arrow Left',
    '◀': 'Arrow Left',
    'LEFT': 'Arrow Left',
    '▲': 'Arrow Up',
    '↑': 'Arrow Up',
    'UP': 'Arrow Up',
    '►': 'Arrow Right',
    '→': 'Arrow Right',
    '▶': 'Arrow Right',
    'RIGHT': 'Arrow Right',
    '▼': 'Arrow Down',
    '↓': 'Arrow Down',
    'DOWN': 'Arrow Down',
    '⏎': 'Enter',
    '↵': 'Enter',
    '↩': 'Enter',
    '⌤': 'Enter',
    '␤': 'Enter',
    'ENTER': 'Enter',
    'ENT': 'Enter',
    'RETURN': 'Enter',
    'RET': 'Enter',
    '⌫': 'Backspace',
    '␈': 'Backspace',
    'BSPC': 'Backspace',
    'BS': 'Backspace',
    'BKSP': 'Backspace',
    'BKS': 'Backspace',
    '⌦': 'Delete',
    '␡': 'Delete',
    'DEL': 'Delete',
    'DELETE': 'Delete',
    '⭾': 'Tab',
    '↹': 'Tab',
    'TAB': 'Tab',
    '␣': ' ',
    '⎵': ' ',
    '␠': ' ',
    'SPC': ' ',
    'SPACE': ' ',
    '⎋': 'Escape',
    'ESC': 'Escape',
    '⇪': 'Caps Lock',
    'CAPS': 'Caps Lock',
    '⤓': 'Page Down',
    '⇟': 'Page Down',
    'PGDN': 'Page Down',
    '⤒': 'Page Up',
    '⇞': 'Page Up',
    'PGUP': 'Page Up',
    '⇱': 'Home',
    '⇤': 'Home',
    '↖': 'Home',
    'HOME': 'Home',
    '⇲': 'End',
    '⇥': 'End',
    '↘': 'End',
    'END': 'End',
    '⇧': 'Shift Left',
    'SFT': 'Shift Left',
    'SHFT': 'Shift Left',
    'SHIFT': 'Shift Left',
    '‹⇧': 'Shift Left',
    'LSFT': 'Shift Left',
    'LSHFT': 'Shift Left',
    'LSHIFT': 'Shift Left',
    '⇧›': 'Shift Right',
    'RSFT': 'Shift Right',
    'RSHFT': 'Shift Right',
    'RSHIFT': 'Shift Right',
    '⌃': 'Control Left',
    '⎈': 'Control Left',
    'CTL': 'Control Left',
    'CTRL': 'Control Left',
    '‹⌃': 'Control Left',
    '‹⎈': 'Control Left',
    'LCTL': 'Control Left',
    'LCTRL': 'Control Left',
    '⌃›': 'Control Right',
    '⎈›': 'Control Right',
    'RCTL': 'Control Right',
    'RCTRL': 'Control Right',
    '⌥': 'Alt Left',
    '⎇': 'Alt Left',
    'ALT': 'Alt Left',
    '‹⎇': 'Alt Left',
    '‹⌥': 'Alt Left',
    'LALT': 'Alt Left',
    '⎇›': 'Alt Right',
    '⌥›': 'Alt Right',
    'RALT': 'Alt Right',
    '⌘': 'Meta Left',
    '⊞': 'Meta Left',
    '◆': 'Meta Left',
    '❖': 'Meta Left',
    'META': 'Meta Left',
    'WIN': 'Meta Left',
    'CMD': 'Meta Left',
    '‹⌘': 'Meta Left',
    '‹⊞': 'Meta Left',
    '‹◆': 'Meta Left',
    '‹❖': 'Meta Left',
    'LMET': 'Meta Left',
    'LWIN': 'Meta Left',
    'LCMD': 'Meta Left',
    '⌘›': 'Meta Right',
    '⊞›': 'Meta Right',
    '◆›': 'Meta Right',
    '❖›': 'Meta Right',
    'RMET': 'Meta Right',
    'RWIN': 'Meta Right',
    'RCMD': 'Meta Right',
    '⎀': 'Insert',
    'INS': 'Insert',
    'INSERT': 'Insert',
    '🔢₀': 'Numpad 0',
    '🔢₁': 'Numpad 1',
    '🔢₂': 'Numpad 2',
    '🔢₃': 'Numpad 3',
    '🔢₄': 'Numpad 4',
    '🔢₅': 'Numpad 5',
    '🔢₆': 'Numpad 6',
    '🔢₇': 'Numpad 7',
    '🔢₈': 'Numpad 8',
    '🔢₉': 'Numpad 9',
    '🔢⁄': 'Numpad Divide',
    '🔢₊': 'Numpad Add',
    '🔢∗': 'Numpad Multiply',
    '🔢₋': 'Numpad Subtract',
    '🔢．': 'Numpad Decimal',
    '⇭': 'Num Lock',
    'NLK': 'Num Lock',
    'NLCK': 'Num Lock',
    '⇳🔒': 'Scroll Lock',
    'SLCK': 'Scroll Lock',
    'SCRLCK': 'Scroll Lock',
    '‐': '-',
    '₌': '='
  };
  static String getKeyForSymbol(String symbol) {
    return keyMappings[symbol] ?? symbol;
  }

  static String? getShiftedSymbol(String symbol) {
    const Map<String, String> shiftedSymbols = {
      '`': '~',
      '1': '!',
      '2': '@',
      '3': '#',
      '4': '\$',
      '5': '%',
      '6': '^',
      '7': '&',
      '8': '*',
      '9': '(',
      '0': ')',
      '-': '_',
      '=': '+',
      '[': '{',
      ']': '}',
      '\\': '|',
      ';': ':',
      '\'': '"',
      ',': '<',
      '.': '>',
      '/': '?'
    };

    return shiftedSymbols[symbol] ?? symbol;
  }
}
